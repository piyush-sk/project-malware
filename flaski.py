from werkzeug.utils import secure_filename
import os
from flask import flash
from flask import Flask, request, jsonify, render_template, redirect,url_for
import get_detail
import generate
import finalpredictsvm
import finalpredictknn
import finalpredictrforest
app = Flask(__name__)



app.config['UPLOAD_FOLDER'] = './static/upload/'
if os.path.exists(app.config['UPLOAD_FOLDER']):
    print("directory exists")
else:
    os.makedirs(app.config['UPLOAD_FOLDER'])
    print("directory created")

@app.route('/hey')
def hello_world():
   return redirect(url_for('home'))

@app.route("/", methods=["GET", "POST"])
def home():
    algorithms = {'KNN': '94.9', 'Support Vector Classifier': '93.44', 'Random Forest' :'95.06' }
    result, accuracy ,name,sdk,size= 'nil', 'nil', 'noname','nosdk','nosize'
   
    if request.method == "POST":
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        # if user does not select file, browser also
        # submit an empty part without filename
        if file.filename == '':
            flash('No selected file')
            return redirect(request.url)
        if file and file.filename.endswith('.apk'):
            filename = secure_filename(file.filename)
            print(filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            name, sdk, size = get_detail.fetch_detail(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            generate.mainn(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            if request.form['algorithm'] == 'KNN':
                accuracy = algorithms['KNN']
                result=finalpredictknn.mainn()
            
            elif request.form['algorithm'] == 'Support Vector Classifier':
                accuracy = algorithms['Support Vector Classifier']
                result=finalpredictsvm.mainn()
                
            elif request.form['algorithm']=='Random Forest' :
                accuracy=algorithms['Random Forest']
                result=finalpredictrforest.mainn()
            
           
    return render_template("index.html",  algorithms=algorithms.keys(), accuracy=accuracy,name=name,sdk=sdk ,size=size,result=result)           

if __name__ == "__main__":
    app.run(debug=True) 